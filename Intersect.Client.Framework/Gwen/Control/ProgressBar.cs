namespace Intersect.Client.Framework.Gwen.Control
{

    /// <summary>
    ///     Progress bar.
    /// </summary>
    public class ProgressBar : Label
    {

        private bool mAutoLabel;

        private bool mHorizontal;

        private float mProgress;

        /// <summary>
        ///     Initializes a new instance of the <see cref="ProgressBar" /> class.
        /// </summary>
        /// <param name="parent">Parent control.</param>
        public ProgressBar(Base parent) : base(parent)
        {
            AutoSizeToContents = false;

            SetSize(128, 32);
            TextPadding = Padding.Three;
            IsHorizontal = true;

            Alignment = Pos.Center;
            mProgress = 0;
            mAutoLabel = true;
        }

        /// <summary>
        ///     Determines whether the control is horizontal.
        /// </summary>
        public bool IsHorizontal
        {
            get => mHorizontal;
            set => mHorizontal = value;
        }

        /// <summary>
        ///     Progress value (0-1).
        /// </summary>
        public float Value
        {
            get => mProgress;
            set
            {
                if (value < 0)
                {
                    value = 0;
                }

                if (value > 1)
                {
                    value = 1;
                }

                mProgress = value;
                if (mAutoLabel)
                {
                    var displayVal = (int) (mProgress * 100);
                    Text = displayVal.ToString() + "%";
                }
            }
        }

        /// <summary>
        ///     Determines whether the label text is autogenerated from value.
        /// </summary>
        public bool AutoLabel
        {
            get => mAutoLabel;
            set => mAutoLabel = value;
        }

        /// <summary>
        ///     Renders the control using specified skin.
        /// </summary>
        /// <param name="skin">Skin to use.</param>
        protected override void Render(Skin.Base skin)
        {
            skin.DrawProgressBar(this, mHorizontal, mProgress);
        }

    }

}
