name: request-help

on:
  issue_comment:                                     
    types: [created]

permissions:
  contents: write

env:
  VERSION_PREFIX: ${{ github.event.issue.number }}
  VERSION_SUFFIX: -pr-test

jobs:
  build:
    runs-on: windows-latest
    if: contains(github.event.comment.body, '/helptest')
    steps:
    
    # Checkout code
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout Pull Request
      run: hub pr checkout ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache binaries
      uses: actions/cache@v3
      id: cache-binaries
      with:
        key: ${{ runner.os }}-binaries-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/**/*.cs*') }}
        path: |
          Intersect*/bin/Release/**/Intersect*

    - name: Cache NuGet dependencies
      if: steps.cache-binaries.outputs.cache-hit != 'true' || inputs.forceBuild == true || inputs.forceRestore == true
      uses: actions/cache@v3
      id: cache-nuget
      with:
        key: ${{ runner.os }}-nuget-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/*.csproj') }}
        path: |
          ~/.nuget/packages
          Intersect*/obj/

    - name: Add msbuild to PATH
      if: steps.cache-binaries.outputs.cache-hit != 'true' || steps.cache-nuget.outputs.cache-hit != 'true' || inputs.forceBuild == true || inputs.forceRestore == true
      uses: microsoft/setup-msbuild@v1
      with:
        msbuild-architecture: x64

    - name: Setup NuGet.exe for use with actions
      if: steps.cache-binaries.outputs.cache-hit != 'true' || steps.cache-nuget.outputs.cache-hit != 'true' || inputs.forceBuild == true || inputs.forceRestore == true
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest # optional, default is latest
        # NuGet API Key to configure.
        # nuget-api-key: # optional
        # Source to scope the NuGet API Key to.
        # nuget-api-key-source: # optional

    - name: Restore NuGet Packages
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true' || inputs.forceRestore == true
      run: nuget restore Intersect.sln

    - name: Build solution
      if: steps.cache-binaries.outputs.cache-hit != 'true' || inputs.forceBuild == true || inputs.forceRestore == true
      run: msbuild Intersect.sln /p:Configuration=Release /p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} /p:Version=0.0.${{ env.VERSION_PREFIX }}.${{ github.run_number }}

    - name: Package artifacts
      uses: AscensionGameDev/actions@4c9073d0721da476ac9337fbbfe46a9ca1ae4389
      with:
        bundle: .github/bundles/patch.json
        version: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}

    - name: Extract archive to avoid zips inside of zips
      run: 7z x dist/${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}.zip

    - name: Delete inner zip
      run: del dist/*.zip
  
    - name: Upload artifacts for workflow debugging
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}
        path: "dist/*"



