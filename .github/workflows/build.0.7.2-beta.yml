name: v0.7.2-beta

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'

permissions:
  contents: write

env:
  VERSION_PREFIX: 0.7.2
  VERSION_SUFFIX: -beta

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Cache binaries
      uses: actions/cache@v3
      id: cache-binaries
      with:
        path: |
          Intersect*/bin/Release/**/Intersect*
        key: ${{ runner.os }}-nuget-${{ hashFiles('Intersect.*/**/*.cs') }}

    - name: Cache NuGet dependencies
      if: steps.cache-binaries.outputs.cache-hit == 'false'
      uses: actions/cache@v3.2.6
      id: cache-nuget
      with:
        path: |
          ~/.nuget/packages
          Intersect*/obj/project.assets.json
        key: ${{ runner.os }}-nuget-${{ hashFiles('Intersect.*/*.csproj') }}

    - name: Add msbuild to PATH
      if: steps.cache-binaries.outputs.cache-hit == 'false' || steps.cache-nuget.outputs.cache-hit == 'false'
      uses: microsoft/setup-msbuild@v1.3.1
      with:
        msbuild-architecture: x64

    - name: Setup NuGet.exe for use with actions
      if: steps.cache-binaries.outputs.cache-hit == 'false' || steps.cache-nuget.outputs.cache-hit == 'false'
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1.1.1
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest # optional, default is latest
        # NuGet API Key to configure.
        # nuget-api-key: # optional
        # Source to scope the NuGet API Key to.
        # nuget-api-key-source: # optional

    - name: Restore NuGet Packages
      if: steps.cache-binaries.outputs.cache-hit == 'false' || steps.cache-nuget.outputs.cache-hit == 'false'
      run: nuget restore Intersect.sln

    - name: Build solution
      if: steps.cache-binaries.outputs.cache-hit == 'false' || steps.cache-nuget.outputs.cache-hit == 'false'
      run: msbuild Intersect.sln /p:Configuration=Release /p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} /p:Version=0.7.2.${{ github.run_number }}

    - name: Checkout assets main_upgrade branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: assets_upgrade
        repository: AscensionGameDev/Intersect-Assets
        ref: main_upgrade
        token: ${{ secrets.INTERSECTBOT_ACCESS_TOKEN }}

    - name: Checkout target main_full branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: assets_full
        repository: AscensionGameDev/Intersect-Assets
        ref: main_full
        token: ${{ secrets.INTERSECTBOT_ACCESS_TOKEN }}

    - name: Package artifacts
      uses: AscensionGameDev/actions@4c9073d0721da476ac9337fbbfe46a9ca1ae4389
      with:
        bundle: .github/bundles/*.json
        version: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}

    - name: Publish GitHub Release
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: "dist/*.zip"
        generate_release_notes: true
        prerelease: true
        name: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}
        tag_name: v${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}
        target_commitish: ${{ github.sha }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Publish to Forum
        uses: AscensionGameDev/actions@1931e0237d9bc185277faa3a10e875a95fffadce
        with:
          api-key: ${{ secrets.INTERSECTBOT_FORUM_TOKEN }}
          build: ${{ github.run_number }}
          hash: ${{ github.sha }}
          version: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}


