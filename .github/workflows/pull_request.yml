name: Pull Requests

on:
  pull_request:
    branches: [ "main" ]

env:
  VERSION_PREFIX: 0.8.0
  VERSION_SUFFIX: -pr${{ github.event.number }}

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache binaries
      uses: actions/cache@v3
      id: cache-binaries
      with:
        key: ${{ runner.os }}-binaries-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/**/*.cs*') }}
        path: |
          Intersect*/bin/Release/**/*

    - name: Setup dotnet
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Cache NuGet dependencies
      uses: actions/cache@v3
      id: cache-nuget
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      with:
        key: ${{ runner.os }}-nuget-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/*.csproj') }}
        path: |
          ~/.nuget/packages
          Intersect*/obj/

    - name: Restore NuGet Packages
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true'
      run: dotnet restore Intersect.sln

    # - run: ls -R ~/.nuget/packages

    - name: Build solution
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      run: |
        dotnet publish Intersect.sln -r win-x64   -p:Configuration=Release -p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} -p:Version=${{ env.VERSION_PREFIX }}.${{ github.run_number }}
        git apply disable-windows-editor.patch
        dotnet publish Intersect.sln -r linux-x64 -p:Configuration=Release -p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} -p:Version=${{ env.VERSION_PREFIX }}.${{ github.run_number }}
        dotnet publish Intersect.sln -r osx-x64   -p:Configuration=Release -p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} -p:Version=${{ env.VERSION_PREFIX }}.${{ github.run_number }}

    - name: Package artifacts
      uses: AscensionGameDev/actions@cc2eb0e356546042e4dc7eca6788fd0b5a063b32
      with:
        bundle: .github/bundles/patch.json
        version: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}

    - name: Extract archive to avoid zips inside of zips
      run: 7z x dist/patch/*.zip

    - name: Delete inner zip
      run: del dist/patch/*.zip

    - name: Upload artifacts for workflow debugging
      uses: actions/upload-artifact@v3
      with:
        name: intersect-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}
        path: "dist/patch/*.zip"
