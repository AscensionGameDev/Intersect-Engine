// <auto-generated />
using System;
using Intersect.Server.Database.Logging;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intersect.Server.Migrations.Logging
{
    [DbContext(typeof(LoggingContext))]
    [Migration("20220806015444_Net6Upgrade")]
    partial class Net6Upgrade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Intersect.Server.Database.Logging.Entities.ChatHistory", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageText")
                        .HasColumnType("TEXT");

                    b.Property<int>("MessageType")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PlayerId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("TargetId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("ChatHistory");
                });

            modelBuilder.Entity("Intersect.Server.Database.Logging.Entities.GuildHistory", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("GuildId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("InitiatorId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Meta")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PlayerId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("GuildHistory");
                });

            modelBuilder.Entity("Intersect.Server.Database.Logging.Entities.TradeHistory", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("Items");

                    b.Property<byte[]>("PlayerId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("TargetId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("TargetItemsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("TargetItems");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("TradeId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("TradeHistory");
                });

            modelBuilder.Entity("Intersect.Server.Database.Logging.Entities.UserActivityHistory", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB");

                    b.Property<int>("Action")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Meta")
                        .HasColumnType("TEXT");

                    b.Property<int>("Peer")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PlayerId")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("UserActivityHistory");
                });

            modelBuilder.Entity("Intersect.Server.Database.Logging.RequestLog", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("BLOB")
                        .HasColumnOrder(0);

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Method")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedRequestHeaders")
                        .HasColumnType("TEXT")
                        .HasColumnName("RequestHeaders");

                    b.Property<string>("SerializedResponseHeaders")
                        .HasColumnType("TEXT")
                        .HasColumnName("ResponseHeaders");

                    b.Property<int>("StatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RequestLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
